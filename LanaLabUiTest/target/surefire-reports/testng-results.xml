<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-10-10T09:39:10Z" name="MultipleSuite" finished-at="2019-10-10T09:41:06Z" duration-ms="116054">
    <groups>
    </groups>
    <test started-at="2019-10-10T09:39:10Z" name="Test1" finished-at="2019-10-10T09:40:02Z" duration-ms="51970">
      <class name="login.Verify_Login_Scenario">
        <test-method is-config="true" signature="initialzeBrowser(java.lang.String)[pri:0, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:39:10Z" name="initialzeBrowser" finished-at="2019-10-10T09:39:26Z" duration-ms="16196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialzeBrowser -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method, java.lang.String)[pri:0, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:39:27Z" name="nameBefore" finished-at="2019-10-10T09:39:27Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.Verify_Login_Scenario.verify_if_user_get_the_error_message_with_invalid_username(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="verify_if_user_get_the_error_message_with_invalid_username(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:39:27Z" name="verify_if_user_get_the_error_message_with_invalid_username" data-provider="Testdata_For_Invalid_UserName" finished-at="2019-10-10T09:39:32Z" duration-ms="4998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[punitjuyal902@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test@123456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[The username or password you entered is invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_if_user_get_the_error_message_with_invalid_username -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:39:32Z" name="getResult" finished-at="2019-10-10T09:39:32Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_if_user_get_the_error_message_with_invalid_username status=SUCCESS method=Verify_Login_Scenario.verify_if_user_get_the_error_message_with_invalid_username(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:login.Verify_Login_Scenario@5403f35f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method, java.lang.String)[pri:0, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:39:32Z" name="nameBefore" finished-at="2019-10-10T09:39:32Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.Verify_Login_Scenario.verify_if_user_get_the_error_message_with_invalid_caseSensative_password(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="verify_if_user_get_the_error_message_with_invalid_caseSensative_password(java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:39:32Z" name="verify_if_user_get_the_error_message_with_invalid_caseSensative_password" data-provider="Testdata_For_Invalid_CaseSensative_Password" finished-at="2019-10-10T09:39:33Z" duration-ms="1802" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[punitjuyal901@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TEST@123456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[The username or password you entered is invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_if_user_get_the_error_message_with_invalid_caseSensative_password -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:39:33Z" name="getResult" finished-at="2019-10-10T09:39:33Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_if_user_get_the_error_message_with_invalid_caseSensative_password status=SUCCESS method=Verify_Login_Scenario.verify_if_user_get_the_error_message_with_invalid_caseSensative_password(java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:login.Verify_Login_Scenario@5403f35f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method, java.lang.String)[pri:0, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:39:33Z" name="nameBefore" finished-at="2019-10-10T09:39:33Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.Verify_Login_Scenario.verify_if_user_able_to_login_with_CaseSensativeEmail(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="verify_if_user_able_to_login_with_CaseSensativeEmail(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:39:33Z" name="verify_if_user_able_to_login_with_CaseSensativeEmail" data-provider="Testdata_For_Valid_CaseSensativeEmail" finished-at="2019-10-10T09:39:55Z" duration-ms="21601" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[PUNITJUYAL901@GMAIL.COM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test@123456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://magellanic.lanalabs.com/model]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
HomePage Url  not matching for testdata username=PUNITJUYAL901@GMAIL.COMand password=Test@123456 expected [https://magellanic.lanalabs.com/model] but found [https://lana-labs.auth.eu-central-1.amazoncognito.com/login?response_type=code&client_id=2961stifta255ivnm3cpngsdac&redirect_uri=https://magellanic.lanalabs.com/aws]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
HomePage Url  not matching for testdata username=PUNITJUYAL901@GMAIL.COMand password=Test@123456 expected [https://magellanic.lanalabs.com/model] but found [https://lana-labs.auth.eu-central-1.amazoncognito.com/login?response_type=code&client_id=2961stifta255ivnm3cpngsdac&redirect_uri=https://magellanic.lanalabs.com/aws]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at com.framework.helper.AssertionHelper.softAssertToCompareString(AssertionHelper.java:67)
at login.Verify_Login_Scenario.verify_if_user_able_to_login_with_CaseSensativeEmail(Verify_Login_Scenario.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_if_user_able_to_login_with_CaseSensativeEmail -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:39:55Z" name="getResult" finished-at="2019-10-10T09:39:55Z" duration-ms="360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_if_user_able_to_login_with_CaseSensativeEmail status=FAILURE method=Verify_Login_Scenario.verify_if_user_able_to_login_with_CaseSensativeEmail(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:login.Verify_Login_Scenario@5403f35f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method, java.lang.String)[pri:0, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:39:55Z" name="nameBefore" finished-at="2019-10-10T09:39:55Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.Verify_Login_Scenario.verify_if_user_able_to_login_with_valid_credentials(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="verify_if_user_able_to_login_with_valid_credentials(java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:39:55Z" name="verify_if_user_able_to_login_with_valid_credentials" data-provider="Testdata_For_Valid_Credentials" finished-at="2019-10-10T09:40:02Z" duration-ms="6713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[punitjuyal901@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test@123456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://magellanic.lanalabs.com/model]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_if_user_able_to_login_with_valid_credentials -->
        <test-method is-config="true" signature="TearDown()[pri:0, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:40:02Z" name="TearDown" finished-at="2019-10-10T09:40:02Z" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:login.Verify_Login_Scenario@5403f35f]" started-at="2019-10-10T09:40:02Z" name="getResult" finished-at="2019-10-10T09:40:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_if_user_able_to_login_with_valid_credentials status=SUCCESS method=Verify_Login_Scenario.verify_if_user_able_to_login_with_valid_credentials(java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:login.Verify_Login_Scenario@5403f35f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- login.Verify_Login_Scenario -->
    </test> <!-- Test1 -->
    <test started-at="2019-10-10T09:40:02Z" name="Test2" finished-at="2019-10-10T09:40:33Z" duration-ms="30381">
      <class name="filter.Verify_If_Selected_Filter_Is_Applied">
        <test-method is-config="true" signature="initialzeBrowser(java.lang.String)[pri:0, instance:filter.Verify_If_Selected_Filter_Is_Applied@2fb3536e]" started-at="2019-10-10T09:40:02Z" name="initialzeBrowser" finished-at="2019-10-10T09:40:17Z" duration-ms="14416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialzeBrowser -->
        <test-method signature="verify_if_country_filter_is_applied(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:filter.Verify_If_Selected_Filter_Is_Applied@2fb3536e]" started-at="2019-10-10T09:40:17Z" name="verify_if_country_filter_is_applied" data-provider="Testdata_For_Filter_Scenarios" finished-at="2019-10-10T09:40:33Z" duration-ms="15834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[punitjuyal901@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test@123456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Country]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Country filter]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_if_country_filter_is_applied -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method, java.lang.String)[pri:0, instance:filter.Verify_If_Selected_Filter_Is_Applied@2fb3536e]" started-at="2019-10-10T09:40:17Z" name="nameBefore" finished-at="2019-10-10T09:40:17Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void filter.Verify_If_Selected_Filter_Is_Applied.verify_if_country_filter_is_applied(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method is-config="true" signature="TearDown()[pri:0, instance:filter.Verify_If_Selected_Filter_Is_Applied@2fb3536e]" started-at="2019-10-10T09:40:33Z" name="TearDown" finished-at="2019-10-10T09:40:33Z" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:filter.Verify_If_Selected_Filter_Is_Applied@2fb3536e]" started-at="2019-10-10T09:40:33Z" name="getResult" finished-at="2019-10-10T09:40:33Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_if_country_filter_is_applied status=SUCCESS method=Verify_If_Selected_Filter_Is_Applied.verify_if_country_filter_is_applied(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:filter.Verify_If_Selected_Filter_Is_Applied@2fb3536e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- filter.Verify_If_Selected_Filter_Is_Applied -->
    </test> <!-- Test2 -->
    <test started-at="2019-10-10T09:40:33Z" name="Test3" finished-at="2019-10-10T09:41:06Z" duration-ms="33600">
      <class name="filter.Verify_if_user_able_to_filter_specific_attribute_value_from_pie_chart">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:filter.Verify_if_user_able_to_filter_specific_attribute_value_from_pie_chart@3b6ddd1d]" started-at="2019-10-10T09:39:10Z" name="beforeSuite" finished-at="2019-10-10T09:39:10Z" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="initialzeBrowser(java.lang.String)[pri:0, instance:filter.Verify_if_user_able_to_filter_specific_attribute_value_from_pie_chart@3b6ddd1d]" started-at="2019-10-10T09:40:33Z" name="initialzeBrowser" finished-at="2019-10-10T09:40:46Z" duration-ms="13196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialzeBrowser -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method, java.lang.String)[pri:0, instance:filter.Verify_if_user_able_to_filter_specific_attribute_value_from_pie_chart@3b6ddd1d]" started-at="2019-10-10T09:40:46Z" name="nameBefore" finished-at="2019-10-10T09:40:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void filter.Verify_if_user_able_to_filter_specific_attribute_value_from_pie_chart.verify_if_country_filter_is_applied(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="verify_if_country_filter_is_applied(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:filter.Verify_if_user_able_to_filter_specific_attribute_value_from_pie_chart@3b6ddd1d]" started-at="2019-10-10T09:40:46Z" name="verify_if_country_filter_is_applied" data-provider="Testdata_For_Filter_Scenarios" finished-at="2019-10-10T09:41:06Z" duration-ms="20275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[punitjuyal901@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test@123456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Country]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Country filter]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_if_country_filter_is_applied -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:filter.Verify_if_user_able_to_filter_specific_attribute_value_from_pie_chart@3b6ddd1d]" started-at="2019-10-10T09:41:06Z" name="getResult" finished-at="2019-10-10T09:41:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_if_country_filter_is_applied status=SUCCESS method=Verify_if_user_able_to_filter_specific_attribute_value_from_pie_chart.verify_if_country_filter_is_applied(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:filter.Verify_if_user_able_to_filter_specific_attribute_value_from_pie_chart@3b6ddd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="TearDown()[pri:0, instance:filter.Verify_if_user_able_to_filter_specific_attribute_value_from_pie_chart@3b6ddd1d]" started-at="2019-10-10T09:41:06Z" name="TearDown" finished-at="2019-10-10T09:41:06Z" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method is-config="true" signature="closeExtentReport()[pri:0, instance:filter.Verify_if_user_able_to_filter_specific_attribute_value_from_pie_chart@3b6ddd1d]" started-at="2019-10-10T09:41:06Z" name="closeExtentReport" finished-at="2019-10-10T09:41:07Z" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeExtentReport -->
      </class> <!-- filter.Verify_if_user_able_to_filter_specific_attribute_value_from_pie_chart -->
    </test> <!-- Test3 -->
  </suite> <!-- MultipleSuite -->
</testng-results>
